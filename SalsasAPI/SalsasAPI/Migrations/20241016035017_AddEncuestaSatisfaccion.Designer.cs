// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SalsasAPI.Models;

#nullable disable

namespace SalsasAPI.Migrations
{
    [DbContext(typeof(SalsaContext))]
    [Migration("20241016035017_AddEncuestaSatisfaccion")]
    partial class AddEncuestaSatisfaccion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SalsasAPI.Models.AgentesVenta", b =>
                {
                    b.Property<int>("IdAgentesVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAgentesVenta"));

                    b.Property<int>("IdAgente")
                        .HasColumnType("int");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.HasKey("IdAgentesVenta");

                    b.HasIndex("IdAgente");

                    b.HasIndex("IdCliente");

                    b.ToTable("AgentesVenta", (string)null);
                });

            modelBuilder.Entity("SalsasAPI.Models.Compra", b =>
                {
                    b.Property<int>("IdCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCompra");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCompra"));

                    b.Property<int?>("IdDetalleMateriaPrima")
                        .HasColumnType("int")
                        .HasColumnName("idDetalle_materia_prima");

                    b.Property<int?>("IdMateriaPrima")
                        .HasColumnType("int")
                        .HasColumnName("idMateriaPrima");

                    b.Property<double>("cantidadComprada")
                        .HasColumnType("float")
                        .HasColumnName("cantidadComprada");

                    b.HasKey("IdCompra")
                        .HasName("PK__Compra__48B99DB7DE15CCD8");

                    b.HasIndex("IdDetalleMateriaPrima");

                    b.HasIndex("IdMateriaPrima");

                    b.ToTable("Compra", (string)null);
                });

            modelBuilder.Entity("SalsasAPI.Models.DetalleMateriaPrima", b =>
                {
                    b.Property<int>("idDetalleMateriaPrima")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idDetalle_materia_prima");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idDetalleMateriaPrima"));

                    b.Property<double>("cantidadExistentes")
                        .HasColumnType("float")
                        .HasColumnName("cantidadExistentes");

                    b.Property<int>("estatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("estatus");

                    b.Property<DateTime>("fechaCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaCompra")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("fechaVencimiento")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaVencimiento");

                    b.Property<int?>("idMateriaPrima")
                        .HasColumnType("int")
                        .HasColumnName("idMateriaPrima");

                    b.Property<int>("porcentaje")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(100)
                        .HasColumnName("porcentaje");

                    b.HasKey("idDetalleMateriaPrima")
                        .HasName("PK__Detalle___451468AC4075AEB9");

                    b.HasIndex("idMateriaPrima");

                    b.ToTable("Detalle_materia_prima", (string)null);
                });

            modelBuilder.Entity("SalsasAPI.Models.DetalleProducto", b =>
                {
                    b.Property<int>("IdDetalleProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idDetalle_producto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalleProducto"));

                    b.Property<int>("CantidadExistentes")
                        .HasColumnType("int")
                        .HasColumnName("cantidadExistentes");

                    b.Property<bool>("Estatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("estatus");

                    b.Property<DateTime?>("FechaVencimiento")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaVencimiento");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnName("idProducto");

                    b.HasKey("IdDetalleProducto")
                        .HasName("PK__Detalle___505159E1638AC0C9");

                    b.HasIndex("IdProducto");

                    b.ToTable("Detalle_producto", (string)null);
                });

            modelBuilder.Entity("SalsasAPI.Models.DetalleRecetum", b =>
                {
                    b.Property<int>("IdDetalleReceta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idDetalle_receta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalleReceta"));

                    b.Property<int>("CantidadMateriaPrima")
                        .HasColumnType("int")
                        .HasColumnName("cantidadMateriaPrima");

                    b.Property<int?>("IdMateriaPrima")
                        .HasColumnType("int")
                        .HasColumnName("idMateriaPrima");

                    b.Property<int?>("IdReceta")
                        .HasColumnType("int")
                        .HasColumnName("idReceta");

                    b.Property<int>("MedidaIngrediente")
                        .HasColumnType("int")
                        .HasColumnName("medidaIngrediente");

                    b.HasKey("IdDetalleReceta")
                        .HasName("PK__Detalle___1629BEDE55F6928B");

                    b.HasIndex("IdMateriaPrima");

                    b.HasIndex("IdReceta");

                    b.ToTable("Detalle_receta", (string)null);
                });

            modelBuilder.Entity("SalsasAPI.Models.DetalleSolicitud", b =>
                {
                    b.Property<int>("IdDetalleSolicitud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_detalle_solicitud");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalleSolicitud"));

                    b.Property<bool>("Estatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("estatus");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaFin");

                    b.Property<DateTime>("FechaInicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaInicio")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("IdSolicitud")
                        .HasColumnType("int")
                        .HasColumnName("idSolicitud");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    b.Property<int>("NumeroPaso")
                        .HasColumnType("int")
                        .HasColumnName("numeroPaso");

                    b.HasKey("IdDetalleSolicitud")
                        .HasName("PK__detalle___F5221E0861D951BC");

                    b.HasIndex("IdSolicitud");

                    b.HasIndex("IdUsuario");

                    b.ToTable("detalle_solicitud", (string)null);
                });

            modelBuilder.Entity("SalsasAPI.Models.DetalleVentum", b =>
                {
                    b.Property<int>("IdDetalleVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idDetalleVenta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalleVenta"));

                    b.Property<double>("Cantidad")
                        .HasColumnType("float")
                        .HasColumnName("cantidad");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnName("idProducto");

                    b.Property<int?>("IdVenta")
                        .HasColumnType("int")
                        .HasColumnName("idVenta");

                    b.Property<double>("Subtotal")
                        .HasColumnType("float")
                        .HasColumnName("subtotal");

                    b.HasKey("IdDetalleVenta")
                        .HasName("PK__DetalleV__BFE2843F1CD4AC29");

                    b.HasIndex("IdProducto");

                    b.HasIndex("IdVenta");

                    b.ToTable("DetalleVenta");
                });

            modelBuilder.Entity("SalsasAPI.Models.Direccion", b =>
                {
                    b.Property<int>("IdDireccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idDireccion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDireccion"));

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("calle");

                    b.Property<string>("CodigoPostal")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("codigoPostal");

                    b.Property<string>("Colonia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("colonia");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("estado");

                    b.Property<string>("Municipio")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("municipio");

                    b.Property<string>("NumExt")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("numExt");

                    b.Property<string>("NumInt")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("numInt");

                    b.Property<string>("Referencia")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("referencia");

                    b.HasKey("IdDireccion")
                        .HasName("PK__Direccion__645723A6D661BB22");

                    b.ToTable("Direccion", (string)null);
                });

            modelBuilder.Entity("SalsasAPI.Models.Efectivo", b =>
                {
                    b.Property<int>("IdEfectivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idEfectivo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEfectivo"));

                    b.Property<double>("CambioDevuelto")
                        .HasColumnType("float")
                        .HasColumnName("cambioDevuelto");

                    b.Property<int?>("IdPago")
                        .HasColumnType("int")
                        .HasColumnName("idPago");

                    b.Property<double>("MontoRecibido")
                        .HasColumnType("float")
                        .HasColumnName("montoRecibido");

                    b.HasKey("IdEfectivo")
                        .HasName("PK__Efectivo__A7ACA7323C1AF00D");

                    b.HasIndex("IdPago");

                    b.ToTable("Efectivo", (string)null);
                });

            modelBuilder.Entity("SalsasAPI.Models.Envio", b =>
                {
                    b.Property<int>("IdEnvio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idEnvio");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEnvio"));

                    b.Property<string>("Estatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasDefaultValue("pendiente")
                        .HasColumnName("estatus");

                    b.Property<DateTime?>("FechaEntregaEstimada")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaEntregaEstimada");

                    b.Property<DateTime?>("FechaEntregaReal")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaEntregaReal");

                    b.Property<DateTime>("FechaEnvio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaEnvio")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("IdPaqueteria")
                        .HasColumnType("int")
                        .HasColumnName("idPaqueteria");

                    b.Property<int?>("IdVenta")
                        .HasColumnType("int")
                        .HasColumnName("idVenta");

                    b.HasKey("IdEnvio")
                        .HasName("PK__Envio__527F831F0C350BBA");

                    b.HasIndex("IdPaqueteria");

                    b.HasIndex("IdVenta");

                    b.ToTable("Envio", (string)null);
                });

            modelBuilder.Entity("SalsasAPI.Models.EnvioDetalle", b =>
                {
                    b.Property<string>("Domicilio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("domicilio");

                    b.Property<string>("EstatusEnvio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("estatusEnvio");

                    b.Property<string>("EstatusPedido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EstatusPedido");

                    b.Property<string>("FechaEntregaEstimada")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fechaEntregaEstimada");

                    b.Property<string>("FechaEnvio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fechaEnvio");

                    b.Property<int>("IdEnvio")
                        .HasColumnType("int")
                        .HasColumnName("idEnvio");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nombreCliente");

                    b.Property<string>("NombrePaqueteria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nombrePaqueteria");

                    b.Property<string>("NombreProducto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nombreProducto");

                    b.Property<double>("Total")
                        .HasColumnType("float")
                        .HasColumnName("total");

                    b.ToTable((string)null);

                    b.ToView("vw_Envio_Detalles", (string)null);
                });

            modelBuilder.Entity("SalsasAPI.Models.EnvioDetalleWeb", b =>
                {
                    b.Property<string>("Domicilio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstatusEnvio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaEntregaEstimada")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaEnvio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdEnvio")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int>("IdVenta")
                        .HasColumnType("int");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Productos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.ToTable((string)null);

                    b.ToView("vw_Envio_DetallesWeb", (string)null);
                });

            modelBuilder.Entity("SalsasAPI.Models.InventarioReporte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Cantidad")
                        .HasColumnType("float")
                        .HasColumnName("Cantidad");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Nombre");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Tipo");

                    b.Property<DateTime>("UltimaActualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("UltimaActualizacion");

                    b.HasKey("Id")
                        .HasName("PK_InventarioReporte");

                    b.ToTable("InventarioReporte", (string)null);
                });

            modelBuilder.Entity("SalsasAPI.Models.LogsUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    b.Property<DateTime?>("LastDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("lastDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Procedimiento")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("procedimiento");

                    b.HasKey("Id")
                        .HasName("PK__LogsUser__3213E83F1B07DC4C");

                    b.ToTable("LogsUser", (string)null);
                });

            modelBuilder.Entity("SalsasAPI.Models.MateriaPrima", b =>
                {
                    b.Property<int>("IdMateriaPrima")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idMateriaPrima");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMateriaPrima"));

                    b.Property<int?>("IdMedida")
                        .HasColumnType("int")
                        .HasColumnName("idMedida");

                    b.Property<int?>("IdProveedor")
                        .HasColumnType("int")
                        .HasColumnName("idProveedor");

                    b.Property<string>("NombreMateria")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)")
                        .HasDefaultValue("")
                        .HasColumnName("nombreMateria");

                    b.Property<double>("PrecioCompra")
                        .HasColumnType("float")
                        .HasColumnName("precioCompra");

                    b.HasKey("IdMateriaPrima")
                        .HasName("PK__MateriaP__97EB058FD45C14F1");

                    b.HasIndex("IdMedida");

                    b.HasIndex("IdProveedor");

                    b.ToTable("MateriaPrima", (string)null);
                });

            modelBuilder.Entity("SalsasAPI.Models.Medidum", b =>
                {
                    b.Property<int>("IdMedida")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idMedida");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMedida"));

                    b.Property<string>("TipoMedida")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("tipoMedida");

                    b.HasKey("IdMedida")
                        .HasName("PK__Medida__4E0391E8A3E17875");

                    b.ToTable("Medida");
                });

            modelBuilder.Entity("SalsasAPI.Models.Merma", b =>
                {
                    b.Property<int>("IdMerma")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idMerma");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMerma"));

                    b.Property<double>("CantidadMerma")
                        .HasColumnType("float")
                        .HasColumnName("cantidadMerma");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValue("")
                        .HasColumnName("descripcion");

                    b.Property<DateTime?>("FechaMerma")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaMerma");

                    b.Property<int?>("IdDetalleProducto")
                        .HasColumnType("int")
                        .HasColumnName("idDetalle_producto");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnName("idProducto");

                    b.HasKey("IdMerma")
                        .HasName("PK__Merma__248B3BCB1CE57DA7");

                    b.HasIndex("IdDetalleProducto");

                    b.HasIndex("IdProducto");

                    b.ToTable("Merma", (string)null);
                });

            modelBuilder.Entity("SalsasAPI.Models.MermaInventario", b =>
                {
                    b.Property<int>("IdMerma")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idMerma");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMerma"));

                    b.Property<double>("CantidadMerma")
                        .HasColumnType("float")
                        .HasColumnName("cantidadMerma");

                    b.Property<DateTime>("FechaMerma")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaMerma")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("IdDetalleMateriaPrima")
                        .HasColumnType("int")
                        .HasColumnName("idDetalle_materia_prima");

                    b.Property<int?>("IdMateriaPrima")
                        .HasColumnType("int")
                        .HasColumnName("idMateriaPrima");

                    b.HasKey("IdMerma")
                        .HasName("PK__merma_in__248B3BCB5993AD91");

                    b.HasIndex("IdDetalleMateriaPrima");

                    b.HasIndex("IdMateriaPrima");

                    b.ToTable("merma_inventario", (string)null);
                });

            modelBuilder.Entity("SalsasAPI.Models.Movimiento", b =>
                {
                    b.Property<int>("IdMovimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idMovimiento");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMovimiento"));

                    b.Property<DateTime>("FechaMovimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaMovimiento")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("IdMateriaPrima")
                        .HasColumnType("int")
                        .HasColumnName("idMateriaPrima");

                    b.Property<int?>("IdVenta")
                        .HasColumnType("int")
                        .HasColumnName("idVenta");

                    b.Property<double>("Monto")
                        .HasColumnType("float")
                        .HasColumnName("monto");

                    b.Property<string>("TipoMovimiento")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)")
                        .HasDefaultValue("")
                        .HasColumnName("tipoMovimiento");

                    b.HasKey("IdMovimiento")
                        .HasName("PK__Movimien__628521737A63CD88");

                    b.HasIndex("IdMateriaPrima");

                    b.HasIndex("IdVenta");

                    b.ToTable("Movimiento", (string)null);
                });

            modelBuilder.Entity("SalsasAPI.Models.Pago", b =>
                {
                    b.Property<int>("IdPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idPago");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPago"));

                    b.Property<DateTime>("FechaPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaPago")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("IdVenta")
                        .HasColumnType("int")
                        .HasColumnName("idVenta");

                    b.Property<string>("MetodoPago")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("metodoPago");

                    b.Property<double>("Monto")
                        .HasColumnType("float")
                        .HasColumnName("monto");

                    b.HasKey("IdPago")
                        .HasName("PK__Pago__BD2295ADFF6693D1");

                    b.HasIndex("IdVenta");

                    b.ToTable("Pago", (string)null);
                });

            modelBuilder.Entity("SalsasAPI.Models.Paqueterium", b =>
                {
                    b.Property<int>("IdPaqueteria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idPaqueteria");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPaqueteria"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("direccion");

                    b.Property<int>("Estatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("estatus");

                    b.Property<string>("NombrePaqueteria")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValue("")
                        .HasColumnName("nombrePaqueteria");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasDefaultValue("")
                        .HasColumnName("telefono");

                    b.HasKey("IdPaqueteria")
                        .HasName("PK__Paqueter__90A13AAB7556F2B1");

                    b.ToTable("Paqueteria");
                });

            modelBuilder.Entity("SalsasAPI.Models.PasoReceta", b =>
                {
                    b.Property<int>("IdPasoReceta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idPasoReceta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPasoReceta"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("descripcion");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnName("idProducto");

                    b.Property<int?>("Paso")
                        .HasColumnType("int")
                        .HasColumnName("paso");

                    b.HasKey("IdPasoReceta")
                        .HasName("PK__PasoRece__F29634850B24BD79");

                    b.HasIndex("IdProducto");

                    b.ToTable("PasoReceta");
                });

            modelBuilder.Entity("SalsasAPI.Models.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idProducto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<double>("Cantidad")
                        .HasColumnType("float")
                        .HasColumnName("cantidad");

                    b.Property<bool>("Estatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("estatus");

                    b.Property<string>("Fotografia")
                        .HasColumnType("text")
                        .HasColumnName("fotografia");

                    b.Property<int?>("IdMedida")
                        .HasColumnType("int")
                        .HasColumnName("idMedida");

                    b.Property<string>("NombreProducto")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("")
                        .HasColumnName("nombreProducto");

                    b.Property<double>("PrecioProduccion")
                        .HasColumnType("float")
                        .HasColumnName("precioProduccion");

                    b.Property<double>("PrecioVenta")
                        .HasColumnType("float")
                        .HasColumnName("precioVenta");

                    b.HasKey("IdProducto")
                        .HasName("PK__Producto__07F4A1321305AC9C");

                    b.HasIndex("IdMedida");

                    b.ToTable("Producto", (string)null);
                });

            modelBuilder.Entity("SalsasAPI.Models.Proveedor", b =>
                {
                    b.Property<int>("IdProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idProveedor");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProveedor"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("direccion");

                    b.Property<int>("Estatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("estatus");

                    b.Property<string>("NombreAtiende")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValue("")
                        .HasColumnName("nombreAtiende");

                    b.Property<string>("NombreProveedor")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValue("")
                        .HasColumnName("nombreProveedor");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasDefaultValue("")
                        .HasColumnName("telefono");

                    b.HasKey("IdProveedor")
                        .HasName("PK__Proveedo__A3FA8E6B5E0DDC30");

                    b.ToTable("Proveedor", (string)null);
                });

            modelBuilder.Entity("SalsasAPI.Models.RankingClientes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("ComprasTotales")
                        .HasColumnType("float")
                        .HasColumnName("ComprasTotales");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("IdUsuario");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NombreUsuario");

                    b.Property<string>("ProductosComprados")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ProductosComprados");

                    b.Property<DateTime>("UltimaActualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("UltimaActualizacion");

                    b.HasKey("Id")
                        .HasName("PK_RankingClientes");

                    b.HasIndex("IdUsuario");

                    b.ToTable("RankingClientes", (string)null);
                });

            modelBuilder.Entity("SalsasAPI.Models.Recetum", b =>
                {
                    b.Property<int>("IdReceta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idReceta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdReceta"));

                    b.Property<int?>("IdMedida")
                        .HasColumnType("int")
                        .HasColumnName("idMedida");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnName("idProducto");

                    b.HasKey("IdReceta")
                        .HasName("PK__Receta__7D03FC81C76DEC79");

                    b.HasIndex("IdMedida");

                    b.HasIndex("IdProducto");

                    b.ToTable("Receta");
                });

            modelBuilder.Entity("SalsasAPI.Models.SolicitudProduccion", b =>
                {
                    b.Property<int>("IdSolicitud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idSolicitud");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSolicitud"));

                    b.Property<int>("Estatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("estatus");

                    b.Property<DateTime>("FechaSolicitud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaSolicitud")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    b.Property<int>("IdVenta")
                        .HasColumnType("int")
                        .HasColumnName("idVenta");

                    b.HasKey("IdSolicitud")
                        .HasName("PK__Solicitu__D801DDB8417435EB");

                    b.HasIndex("IdUsuario");

                    b.HasIndex("IdVenta");

                    b.ToTable("SolicitudProduccion", (string)null);
                });

            modelBuilder.Entity("SalsasAPI.Models.Tarjetum", b =>
                {
                    b.Property<int>("IdTarjeta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idTarjeta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTarjeta"));

                    b.Property<string>("Cvv")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("cvv");

                    b.Property<string>("FechaExpiracion")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("fechaExpiracion");

                    b.Property<int?>("IdPago")
                        .HasColumnType("int")
                        .HasColumnName("idPago");

                    b.Property<string>("NombreTitular")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombreTitular");

                    b.Property<string>("NumeroTarjeta")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("numeroTarjeta");

                    b.HasKey("IdTarjeta")
                        .HasName("PK__Tarjeta__C456D538C4D469F2");

                    b.HasIndex("IdPago");

                    b.ToTable("Tarjeta");
                });

            modelBuilder.Entity("SalsasAPI.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Contrasenia")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasDefaultValue("")
                        .HasColumnName("contrasenia");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasDefaultValue("")
                        .HasColumnName("correo");

                    b.Property<DateTime?>("DateLastToken")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dateLastToken")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("Estatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("estatus");

                    b.Property<int>("IdDireccion")
                        .HasColumnType("int")
                        .HasColumnName("idDireccion");

                    b.Property<int>("Intentos")
                        .HasColumnType("int")
                        .HasColumnName("intentos");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("nombre");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)")
                        .HasDefaultValue("")
                        .HasColumnName("nombreUsuario");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("rol");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasDefaultValue("")
                        .HasColumnName("telefono");

                    b.HasKey("IdUsuario")
                        .HasName("PK__Usuario__645723A6C661BB22");

                    b.HasIndex("IdDireccion")
                        .IsUnique();

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("SalsasAPI.Models.VentasPorProductoPeriodo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("CantidadVendida")
                        .HasColumnType("float")
                        .HasColumnName("CantidadVendida");

                    b.Property<string>("IndicadorGlobal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("IndicadorGlobal");

                    b.Property<string>("NombreProducto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NombreProducto");

                    b.Property<int>("NumeroVentas")
                        .HasColumnType("int")
                        .HasColumnName("NumeroVentas");

                    b.Property<DateTime>("PeriodoFin")
                        .HasColumnType("date")
                        .HasColumnName("PeriodoFin");

                    b.Property<DateTime>("PeriodoInicio")
                        .HasColumnType("date")
                        .HasColumnName("PeriodoInicio");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int")
                        .HasColumnName("ProductoId");

                    b.Property<double>("TotalRecaudado")
                        .HasColumnType("float")
                        .HasColumnName("TotalRecaudado");

                    b.HasKey("Id")
                        .HasName("PK_VentasPorProductoPeriodo");

                    b.HasIndex("ProductoId");

                    b.ToTable("VentasPorProductoPeriodo", (string)null);
                });

            modelBuilder.Entity("SalsasAPI.Models.Ventum", b =>
                {
                    b.Property<int>("IdVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idVenta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVenta"));

                    b.Property<DateTime>("FechaVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaVenta")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<double>("Total")
                        .HasColumnType("float")
                        .HasColumnName("total");

                    b.HasKey("IdVenta")
                        .HasName("PK__Venta__077D56146F550EF7");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Venta");
                });

            modelBuilder.Entity("SalsasAPI.Models.vw_Detalle_Receta", b =>
                {
                    b.Property<int>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidadMateriaPrima");

                    b.Property<int>("IdMateriaPrima")
                        .HasColumnType("int")
                        .HasColumnName("idMateriaPrima");

                    b.Property<int>("IdMedida")
                        .HasColumnType("int")
                        .HasColumnName("idMedida");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnName("idProducto");

                    b.Property<int>("IdReceta")
                        .HasColumnType("int")
                        .HasColumnName("idReceta");

                    b.Property<string>("NombreMateria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nombreMateria");

                    b.Property<string>("TipoMedida")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MedidaProducto");

                    b.ToTable((string)null);

                    b.ToView("vw_Detalle_Receta_Producto", (string)null);
                });

            modelBuilder.Entity("SalsasAPI.Models.vw_MateriaPrima_Detalle", b =>
                {
                    b.Property<int>("IdMateriaPrima")
                        .HasColumnType("int")
                        .HasColumnName("idMateriaPrima");

                    b.Property<string>("NombreMateria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nombreMateria");

                    b.Property<string>("TipoMedida")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tipoMedida");

                    b.ToTable((string)null);

                    b.ToView("vw_MateriaPrima_Detalle", (string)null);
                });

            modelBuilder.Entity("SalsasAPI.Models.vw_Producto_Detalle", b =>
                {
                    b.Property<double>("Cantidad")
                        .HasColumnType("float")
                        .HasColumnName("cantidad");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit")
                        .HasColumnName("estatus");

                    b.Property<string>("Fotografia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fotografia");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnName("idProducto");

                    b.Property<string>("NombreProducto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nombreProducto");

                    b.Property<double>("PrecioProduccion")
                        .HasColumnType("float")
                        .HasColumnName("precioProduccion");

                    b.Property<double>("PrecioVenta")
                        .HasColumnType("float")
                        .HasColumnName("precioVenta");

                    b.Property<int>("Stock")
                        .HasColumnType("int")
                        .HasColumnName("Stock");

                    b.Property<string>("TipoMedida")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tipoMedida");

                    b.ToTable((string)null);

                    b.ToView("vw_Producto_Detalle", (string)null);
                });

            modelBuilder.Entity("SalsasAPI.Models.AgentesVenta", b =>
                {
                    b.HasOne("SalsasAPI.Models.Usuario", "Agente")
                        .WithMany()
                        .HasForeignKey("IdAgente")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SalsasAPI.Models.Usuario", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Agente");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("SalsasAPI.Models.Compra", b =>
                {
                    b.HasOne("SalsasAPI.Models.DetalleMateriaPrima", "IdDetalleMateriaPrimaNavigation")
                        .WithMany("Compras")
                        .HasForeignKey("IdDetalleMateriaPrima")
                        .HasConstraintName("FK__Compra__idDetall__59FA5E80");

                    b.HasOne("SalsasAPI.Models.MateriaPrima", "IdMateriaPrimaNavigation")
                        .WithMany("Compras")
                        .HasForeignKey("IdMateriaPrima")
                        .HasConstraintName("FK__Compra__idMateri__59063A47");

                    b.Navigation("IdDetalleMateriaPrimaNavigation");

                    b.Navigation("IdMateriaPrimaNavigation");
                });

            modelBuilder.Entity("SalsasAPI.Models.DetalleMateriaPrima", b =>
                {
                    b.HasOne("SalsasAPI.Models.MateriaPrima", "IdMateriaPrimaNavigation")
                        .WithMany("DetalleMateriaPrimas")
                        .HasForeignKey("idMateriaPrima")
                        .HasConstraintName("FK__Detalle_m__idMat__5535A963");

                    b.Navigation("IdMateriaPrimaNavigation");
                });

            modelBuilder.Entity("SalsasAPI.Models.DetalleProducto", b =>
                {
                    b.HasOne("SalsasAPI.Models.Producto", "IdProductoNavigation")
                        .WithMany("DetalleProductos")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK__Detalle_p__idPro__656C112C");

                    b.Navigation("IdProductoNavigation");
                });

            modelBuilder.Entity("SalsasAPI.Models.DetalleRecetum", b =>
                {
                    b.HasOne("SalsasAPI.Models.MateriaPrima", "IdMateriaPrimaNavigation")
                        .WithMany("DetalleReceta")
                        .HasForeignKey("IdMateriaPrima")
                        .HasConstraintName("FK__Detalle_r__idMat__787EE5A0");

                    b.HasOne("SalsasAPI.Models.Recetum", "IdRecetaNavigation")
                        .WithMany("DetalleReceta")
                        .HasForeignKey("IdReceta")
                        .HasConstraintName("FK__Detalle_r__idRec__797309D9");

                    b.Navigation("IdMateriaPrimaNavigation");

                    b.Navigation("IdRecetaNavigation");
                });

            modelBuilder.Entity("SalsasAPI.Models.DetalleSolicitud", b =>
                {
                    b.HasOne("SalsasAPI.Models.SolicitudProduccion", "IdSolicitudNavigation")
                        .WithMany("DetalleSolicituds")
                        .HasForeignKey("IdSolicitud")
                        .HasConstraintName("FK__detalle_s__idSol__30C33EC3");

                    b.HasOne("SalsasAPI.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("DetalleSolicituds")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK__detalle_s__idUsu__31B762FC");

                    b.Navigation("IdSolicitudNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("SalsasAPI.Models.DetalleVentum", b =>
                {
                    b.HasOne("SalsasAPI.Models.Producto", "IdProductoNavigation")
                        .WithMany("DetalleVenta")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK__DetalleVe__idPro__02FC7413");

                    b.HasOne("SalsasAPI.Models.Ventum", "IdVentaNavigation")
                        .WithMany("DetalleVenta")
                        .HasForeignKey("IdVenta")
                        .HasConstraintName("FK__DetalleVe__idVen__02084FDA");

                    b.Navigation("IdProductoNavigation");

                    b.Navigation("IdVentaNavigation");
                });

            modelBuilder.Entity("SalsasAPI.Models.Efectivo", b =>
                {
                    b.HasOne("SalsasAPI.Models.Pago", "IdPagoNavigation")
                        .WithMany("Efectivos")
                        .HasForeignKey("IdPago")
                        .HasConstraintName("FK__Efectivo__idPago__208CD6FA");

                    b.Navigation("IdPagoNavigation");
                });

            modelBuilder.Entity("SalsasAPI.Models.Envio", b =>
                {
                    b.HasOne("SalsasAPI.Models.Paqueterium", "IdPaqueteriaNavigation")
                        .WithMany("Envios")
                        .HasForeignKey("IdPaqueteria")
                        .HasConstraintName("FK__Envio__idPaquete__2BFE89A6");

                    b.HasOne("SalsasAPI.Models.Ventum", "IdVentaNavigation")
                        .WithMany("Envios")
                        .HasForeignKey("IdVenta")
                        .HasConstraintName("FK__Envio__idVenta__2B0A656D");

                    b.Navigation("IdPaqueteriaNavigation");

                    b.Navigation("IdVentaNavigation");
                });

            modelBuilder.Entity("SalsasAPI.Models.MateriaPrima", b =>
                {
                    b.HasOne("SalsasAPI.Models.Medidum", "IdMedidaNavigation")
                        .WithMany("MateriaPrimas")
                        .HasForeignKey("IdMedida")
                        .HasConstraintName("FK__MateriaPr__idMed__4D94879B");

                    b.HasOne("SalsasAPI.Models.Proveedor", "IdProveedorNavigation")
                        .WithMany("MateriaPrimas")
                        .HasForeignKey("IdProveedor")
                        .HasConstraintName("FK__MateriaPr__idPro__4E88ABD4");

                    b.Navigation("IdMedidaNavigation");

                    b.Navigation("IdProveedorNavigation");
                });

            modelBuilder.Entity("SalsasAPI.Models.Merma", b =>
                {
                    b.HasOne("SalsasAPI.Models.DetalleProducto", "IdDetalleProductoNavigation")
                        .WithMany("Mermas")
                        .HasForeignKey("IdDetalleProducto")
                        .HasConstraintName("FK__Merma__idDetalle__6B24EA82");

                    b.HasOne("SalsasAPI.Models.Producto", "IdProductoNavigation")
                        .WithMany("Mermas")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK__Merma__idProduct__6A30C649");

                    b.Navigation("IdDetalleProductoNavigation");

                    b.Navigation("IdProductoNavigation");
                });

            modelBuilder.Entity("SalsasAPI.Models.MermaInventario", b =>
                {
                    b.HasOne("SalsasAPI.Models.DetalleMateriaPrima", "IdDetalleMateriaPrimaNavigation")
                        .WithMany("MermaInventarios")
                        .HasForeignKey("IdDetalleMateriaPrima")
                        .HasConstraintName("FK__merma_inv__idDet__70DDC3D8");

                    b.HasOne("SalsasAPI.Models.MateriaPrima", "IdMateriaPrimaNavigation")
                        .WithMany("MermaInventarios")
                        .HasForeignKey("IdMateriaPrima")
                        .HasConstraintName("FK__merma_inv__idMat__6FE99F9F");

                    b.Navigation("IdDetalleMateriaPrimaNavigation");

                    b.Navigation("IdMateriaPrimaNavigation");
                });

            modelBuilder.Entity("SalsasAPI.Models.Movimiento", b =>
                {
                    b.HasOne("SalsasAPI.Models.MateriaPrima", "IdMateriaPrimaNavigation")
                        .WithMany("Movimientos")
                        .HasForeignKey("IdMateriaPrima")
                        .HasConstraintName("FK__Movimient__idMat__0A9D95DB");

                    b.HasOne("SalsasAPI.Models.Ventum", "IdVentaNavigation")
                        .WithMany("Movimientos")
                        .HasForeignKey("IdVenta")
                        .HasConstraintName("FK__Movimient__idVen__09A971A2");

                    b.Navigation("IdMateriaPrimaNavigation");

                    b.Navigation("IdVentaNavigation");
                });

            modelBuilder.Entity("SalsasAPI.Models.Pago", b =>
                {
                    b.HasOne("SalsasAPI.Models.Ventum", "IdVentaNavigation")
                        .WithMany("Pagos")
                        .HasForeignKey("IdVenta")
                        .HasConstraintName("FK__Pago__idVenta__18EBB532");

                    b.Navigation("IdVentaNavigation");
                });

            modelBuilder.Entity("SalsasAPI.Models.PasoReceta", b =>
                {
                    b.HasOne("SalsasAPI.Models.Producto", "IdProductoNavigation")
                        .WithMany("PasoReceta")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK__PasoRecet__idPro__14270015");

                    b.Navigation("IdProductoNavigation");
                });

            modelBuilder.Entity("SalsasAPI.Models.Producto", b =>
                {
                    b.HasOne("SalsasAPI.Models.Medidum", "IdMedidaNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("IdMedida")
                        .HasConstraintName("FK__Producto__idMedi__60A75C0F");

                    b.Navigation("IdMedidaNavigation");
                });

            modelBuilder.Entity("SalsasAPI.Models.RankingClientes", b =>
                {
                    b.HasOne("SalsasAPI.Models.Usuario", "Usuario")
                        .WithMany("RankingClientes")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_RankingClientes_Usuario");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SalsasAPI.Models.Recetum", b =>
                {
                    b.HasOne("SalsasAPI.Models.Medidum", "IdMedidaNavigation")
                        .WithMany("Receta")
                        .HasForeignKey("IdMedida")
                        .HasConstraintName("FK__Receta__idMedida__73BA3083");

                    b.HasOne("SalsasAPI.Models.Producto", "IdProductoNavigation")
                        .WithMany("Receta")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK__Receta__idProduc__74AE54BC");

                    b.Navigation("IdMedidaNavigation");

                    b.Navigation("IdProductoNavigation");
                });

            modelBuilder.Entity("SalsasAPI.Models.SolicitudProduccion", b =>
                {
                    b.HasOne("SalsasAPI.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("SolicitudProduccions")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Solicitud__idUsu__114A936A");

                    b.HasOne("SalsasAPI.Models.Ventum", "IdVentaNavigation")
                        .WithMany("SolicitudProduccions")
                        .HasForeignKey("IdVenta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Solicitud__idVen__1234ABCD");

                    b.Navigation("IdUsuarioNavigation");

                    b.Navigation("IdVentaNavigation");
                });

            modelBuilder.Entity("SalsasAPI.Models.Tarjetum", b =>
                {
                    b.HasOne("SalsasAPI.Models.Pago", "IdPagoNavigation")
                        .WithMany("Tarjeta")
                        .HasForeignKey("IdPago")
                        .HasConstraintName("FK__Tarjeta__idPago__1BC821DD");

                    b.Navigation("IdPagoNavigation");
                });

            modelBuilder.Entity("SalsasAPI.Models.Usuario", b =>
                {
                    b.HasOne("SalsasAPI.Models.Direccion", "Direccion")
                        .WithOne()
                        .HasForeignKey("SalsasAPI.Models.Usuario", "IdDireccion")
                        .IsRequired()
                        .HasConstraintName("FK_Usuario_Direccion");

                    b.Navigation("Direccion");
                });

            modelBuilder.Entity("SalsasAPI.Models.VentasPorProductoPeriodo", b =>
                {
                    b.HasOne("SalsasAPI.Models.Producto", "Producto")
                        .WithMany("VentasPorProductoPeriodos")
                        .HasForeignKey("ProductoId")
                        .IsRequired()
                        .HasConstraintName("FK_VentasPorProductoPeriodo_Producto");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("SalsasAPI.Models.Ventum", b =>
                {
                    b.HasOne("SalsasAPI.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Ventas")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK_Venta_Usuario");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("SalsasAPI.Models.DetalleMateriaPrima", b =>
                {
                    b.Navigation("Compras");

                    b.Navigation("MermaInventarios");
                });

            modelBuilder.Entity("SalsasAPI.Models.DetalleProducto", b =>
                {
                    b.Navigation("Mermas");
                });

            modelBuilder.Entity("SalsasAPI.Models.MateriaPrima", b =>
                {
                    b.Navigation("Compras");

                    b.Navigation("DetalleMateriaPrimas");

                    b.Navigation("DetalleReceta");

                    b.Navigation("MermaInventarios");

                    b.Navigation("Movimientos");
                });

            modelBuilder.Entity("SalsasAPI.Models.Medidum", b =>
                {
                    b.Navigation("MateriaPrimas");

                    b.Navigation("Productos");

                    b.Navigation("Receta");
                });

            modelBuilder.Entity("SalsasAPI.Models.Pago", b =>
                {
                    b.Navigation("Efectivos");

                    b.Navigation("Tarjeta");
                });

            modelBuilder.Entity("SalsasAPI.Models.Paqueterium", b =>
                {
                    b.Navigation("Envios");
                });

            modelBuilder.Entity("SalsasAPI.Models.Producto", b =>
                {
                    b.Navigation("DetalleProductos");

                    b.Navigation("DetalleVenta");

                    b.Navigation("Mermas");

                    b.Navigation("PasoReceta");

                    b.Navigation("Receta");

                    b.Navigation("VentasPorProductoPeriodos");
                });

            modelBuilder.Entity("SalsasAPI.Models.Proveedor", b =>
                {
                    b.Navigation("MateriaPrimas");
                });

            modelBuilder.Entity("SalsasAPI.Models.Recetum", b =>
                {
                    b.Navigation("DetalleReceta");
                });

            modelBuilder.Entity("SalsasAPI.Models.SolicitudProduccion", b =>
                {
                    b.Navigation("DetalleSolicituds");
                });

            modelBuilder.Entity("SalsasAPI.Models.Usuario", b =>
                {
                    b.Navigation("DetalleSolicituds");

                    b.Navigation("RankingClientes");

                    b.Navigation("SolicitudProduccions");

                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("SalsasAPI.Models.Ventum", b =>
                {
                    b.Navigation("DetalleVenta");

                    b.Navigation("Envios");

                    b.Navigation("Movimientos");

                    b.Navigation("Pagos");

                    b.Navigation("SolicitudProduccions");
                });
#pragma warning restore 612, 618
        }
    }
}
